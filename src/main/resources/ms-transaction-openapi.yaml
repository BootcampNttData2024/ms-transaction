openapi: '3.0.2'
info:
  title: Microservice DespositTransaction - OpenAPI 3.0
  version: '1.0'
  description: |- 
    La presente especificación contiene los endpoints del microservicio Transaction
    y esta basado en la especificación OpenAPI 3.0.  
  termsOfService: http://swagger.io/terms/
  contact:
    email: alcibarvasquez@gmail.com
servers:
  - url: http://localhost:8095

tags:  
  - name: Transfer
    description: Transferency transaction
  - name: Withdrawal
    description: Withdrawal transaction
  - name: Deposit
    description: Deposit transaction
  - name: Payment
    description: Payment transaction
  - name: TransactionType
    description: transaction type
  - name: Report
    description: Report transaction

paths:  
  /transaction/transfer:
    post:
      tags:
        - Transfer
      operationId: addTransfer
      description: 'POST'
      requestBody:
        $ref: '#/components/requestBodies/TransferModel'
      responses:
        '200':
          description: 'response transaction post'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferModel'    
    get:
      tags:
        - Transfer
      operationId: getAllTransfers
      description: GETALL
      responses:
        '200':
          description: 'response get all transactions'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransferModel'
  /transaction/transfer/{transactionId}:
    put:
      tags:
        - Transfer
      operationId: updateTransfer
      description: 'PUT'
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/TransferModel'
      responses:
        '200':
          description: 'response transaction put'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferModel'
    get:
      tags:
        - Transfer
      operationId: getTransferById
      description: GET
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'response get transaction by id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferModel'
  /transaction/withdrawal:
    post:
      tags:
        - Withdrawal
      operationId: addWithdrawal
      description: 'POST'
      requestBody:
        $ref: '#/components/requestBodies/WithdrawalModel'
      responses:
        '200':
          description: 'response transaction post'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalModel'    
    get:
      tags:
        - Withdrawal
      operationId: getAllWithdrawals
      description: GETALL
      responses:
        '200':
          description: 'response get all transactions'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WithdrawalModel'
  /transaction/withdrawal/{transactionId}:
    put:
      tags:
        - Withdrawal
      operationId: updateWithdrawal
      description: 'PUT'
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WithdrawalModel'
      responses:
        '200':
          description: 'response transaction put'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalModel'
    get:
      tags:
        - Withdrawal
      operationId: getWithdrawalById
      description: GET
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'response get transaction by id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalModel'
  /transaction/deposit:
    post:
      tags:
        - Deposit
      operationId: addDeposit
      description: 'POST'
      requestBody:
        $ref: '#/components/requestBodies/DepositModel'
      responses:
        '200':
          description: 'response transaction post'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositModel'    
    get:
      tags:
        - Deposit
      operationId: getAllDeposits
      description: GETALL
      responses:
        '200':
          description: 'response get all transactions'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepositModel'
  /transaction/desposit/{transactionId}:
    put:
      tags:
        - Deposit
      operationId: updateDeposit
      description: 'PUT'
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/DepositModel'
      responses:
        '200':
          description: 'response transaction put'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositModel'
    get:
      tags:
        - Deposit
      operationId: getDepositById
      description: GET
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'response get transaction by id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositModel'   
  /transaction/payment:
    post:
      tags:
        - Payment
      operationId: addPayment
      description: 'POST'
      requestBody:
        $ref: '#/components/requestBodies/PaymentModel'
      responses:
        '200':
          description: 'response transaction post'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentModel'    
    get:
      tags:
        - Payment
      operationId: getAllPayments
      description: GETALL
      responses:
        '200':
          description: 'response get all transactions'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentModel'
  /transaction/payment/{transactionId}:
    put:
      tags:
        - Payment
      operationId: updatePayment
      description: 'PUT'
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/PaymentModel'
      responses:
        '200':
          description: 'response transaction put'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentModel'
    get:
      tags:
        - Payment
      operationId: getPaymentById
      description: GET
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'response get transaction by id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentModel'   
  /transaction-type:
    post:
      tags:
        - TransactionType
      operationId: addTransactionType
      description: 'POST'
      requestBody:
        $ref: '#/components/requestBodies/TransactionTypeModel'
      responses:
        '200':
          description: 'response transaction type post'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionTypeModel'      
    get:
      tags:
        - TransactionType
      operationId: getAllTransactionType
      description: GETALL
      responses:
        '200':
          description: 'response get all transaction type'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionTypeModel'
  /transaction-type/{transactionTypeId}:
    put:
      tags:
        - TransactionType
      operationId: updateTransactionType
      description: 'PUT'
      parameters:
        - in: path
          name: transactionTypeId
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/TransactionTypeModel'
      responses:
        '200':
          description: 'response transaction type put'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionTypeModel'
    get:
      tags:
        - TransactionType
      operationId: getTransactionTypeById
      description: GET
      parameters:
        - in: path
          name: transactionTypeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'response get transaction type by id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionTypeModel'
    delete:
      tags:
        - TransactionType
      operationId: deleteTransactionTypeById
      description: 'DELETE'
      parameters:
        - in: path
          name: transactionTypeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: delete transaction type by id  
  /transaction/commission-report:    
    get:
      tags:
        - Report
      operationId: getCommissionReport
      description: GET
      parameters:
        - in: query
          name: clientId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'response get commission reportby client id'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommissionReport'

components:
  schemas:          
    TransferModel:
      type: object
      description: Transfer model
      properties:
        transactionId:
          type: string
          example: '1'        
        fromClientId:
          type: string
          example: '1'  
        fromProductId:
          type: string
          example: '1'  
        fromAccountNumber:
          type: string
          example: '452163258547'
        toClientId:
          type: string
          example: '2'  
        toProductId:
          type: string
          example: '2'  
        toAccountNumber:
          type: string
          example: '452163258548 REW'    
        transactionAmount:
          type: number
          format: double
          example: 500.20
        transactionDate:
          type: string
          example: '2024-01-28 00:00'
    WithdrawalModel:
      type: object
      description: Withdrawal model
      required:
        - accountNumber
        - transactionAmount
      properties:
        transactionId:
          type: string
          example: '1' 
        clientId:
          type: string
          example: '1' 
        productId:
          type: string
          example: '1'  
        accountNumber:
          type: string
          example: '452163258547'
        transactionAmount:
          type: number
          format: double
          example: 500.20
        commissionPerTransaction:
          type: number
          format: double
          example: 5        
        transactionDate:
          type: string   
          example: '2024-01-28 00:00'       
    DepositModel:
      type: object
      description: Desposit model
      required:
        - accountNumber
        - transactionAmount
      properties:
        transactionId:
          type: string
          example: '1'  
        clientId:
          type: string
          example: '1'       
        productId:
          type: string
          example: '1'  
        accountNumber:
          type: string
          example: '452163258547'  
        transactionAmount:
          type: number
          format: double
          example: 500.20
        commissionPerTransaction:
          type: number
          format: double
          example: 5
        transactionDate:
          type: string
          example: '2024-01-28 00:00'
    PaymentModel:
      type: object
      description: Desposit model
      required:
        - productId
        - transactionAmount
      properties:
        transactionId:
          type: string
          example: '1'  
        clientId:
          type: string
          example: '1'       
        productId:
          type: string
          example: '1'  
        cardNumber:
          type: string
          example: '452163258547'  
        fromPhoneNumber:
          type: string
          example: '929292921'
        toPhoneNumber:
          type: string
          example: '929292922'
        transactionAmount:
          type: number
          format: double
          example: 500.20
        transactionDate:
          type: string
          example: '2024-01-28 00:00'
    TransactionTypeModel:
      type: object
      description: Transaction type model
      properties:
        transactionTypeId:
          type: string
          example: '1'
        name:
          type: string
          example: 'DEPOSITO, RETIRO, PAGO'  
    CommissionReport:
      type: object
      description: Commision report model
      properties:
        transactionId:
          type: string
          example: '1'
        productId:
          type: string
          example: '1'
        commissionCharged:
          type: number
          format: double
          example: 500.20
        transactionDate:
          type: string          
  requestBodies:
    TransferModel:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransferModel'
    WithdrawalModel:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WithdrawalModel'
    DepositModel:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepositModel'
    PaymentModel:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentModel'
    TransactionTypeModel:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionTypeModel'